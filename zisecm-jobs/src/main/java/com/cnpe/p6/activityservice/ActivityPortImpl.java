
/**
 * Please modify this class to meet your needs
 * This class is not complete
 */

package com.cnpe.p6.activityservice;

import java.util.logging.Logger;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;

/**
 * This class was generated by Apache CXF 3.0.3
 * 2020-07-08T18:51:22.029+08:00
 * Generated source version: 3.0.3
 * 
 */

@javax.jws.WebService(
                      serviceName = "ActivityService",
                      portName = "ActivityPort",
                      targetNamespace = "http://xmlns.oracle.com/Primavera/P6/WS/Activity/V1",
                      wsdlLocation = "http://10.30.200.163:8206/p6ws/services/ActivityService?wsdl",
                      endpointInterface = "com.cnpe.p6.activityservice.ActivityPortType")
                      
public class ActivityPortImpl implements ActivityPortType {

    private static final Logger LOG = Logger.getLogger(ActivityPortImpl.class.getName());

    /* (non-Javadoc)
     * @see com.cnpe.p6.activityservice.ActivityPortType#copyActivity(java.lang.Integer  objectId ,)java.lang.Integer  targetProjectObjectId ,)java.lang.Integer  targetWBSObjectId ,)java.lang.String  targetActivityId ,)java.lang.Boolean  copyResourceAndRoleAssignments ,)java.lang.Boolean  copyRelationships ,)java.lang.Boolean  copyActivityCodes ,)java.lang.Boolean  copyActivityNotes ,)java.lang.Boolean  copyActivityExpenses ,)java.lang.Boolean  copyActivitySteps ,)java.lang.Boolean  copyProjectDocuments ,)java.lang.Boolean  copyPastPeriodActuals )*
     */
    public void copyActivity(javax.xml.ws.Holder<java.lang.Integer> objectId,java.lang.Integer targetProjectObjectId,java.lang.Integer targetWBSObjectId,java.lang.String targetActivityId,java.lang.Boolean copyResourceAndRoleAssignments,java.lang.Boolean copyRelationships,java.lang.Boolean copyActivityCodes,java.lang.Boolean copyActivityNotes,java.lang.Boolean copyActivityExpenses,java.lang.Boolean copyActivitySteps,java.lang.Boolean copyProjectDocuments,java.lang.Boolean copyPastPeriodActuals) throws IntegrationFault    { 
        LOG.info("Executing operation copyActivity");
        System.out.println(objectId.value);
        System.out.println(targetProjectObjectId);
        System.out.println(targetWBSObjectId);
        System.out.println(targetActivityId);
        System.out.println(copyResourceAndRoleAssignments);
        System.out.println(copyRelationships);
        System.out.println(copyActivityCodes);
        System.out.println(copyActivityNotes);
        System.out.println(copyActivityExpenses);
        System.out.println(copyActivitySteps);
        System.out.println(copyProjectDocuments);
        System.out.println(copyPastPeriodActuals);
        try {
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
        //throw new IntegrationFault("IntegrationFault...");
    }

    /* (non-Javadoc)
     * @see com.cnpe.p6.activityservice.ActivityPortType#updateActivities(java.util.List<com.cnpe.p6.activityservice.Activity>  activity )*
     */
    public boolean updateActivities(java.util.List<com.cnpe.p6.activityservice.Activity> activity) throws IntegrationFault    { 
        LOG.info("Executing operation updateActivities");
        System.out.println(activity);
        try {
            boolean _return = false;
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
        //throw new IntegrationFault("IntegrationFault...");
    }

    /* (non-Javadoc)
     * @see com.cnpe.p6.activityservice.ActivityPortType#createActivities(java.util.List<com.cnpe.p6.activityservice.Activity>  activity )*
     */
    public java.util.List<java.lang.Integer> createActivities(java.util.List<com.cnpe.p6.activityservice.Activity> activity) throws IntegrationFault    { 
        LOG.info("Executing operation createActivities");
        System.out.println(activity);
        try {
            java.util.List<java.lang.Integer> _return = null;
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
        //throw new IntegrationFault("IntegrationFault...");
    }

    /* (non-Javadoc)
     * @see com.cnpe.p6.activityservice.ActivityPortType#getFieldLengthActivity(java.lang.String  field )*
     */
    public int getFieldLengthActivity(java.lang.String field) throws IntegrationFault    { 
        LOG.info("Executing operation getFieldLengthActivity");
        System.out.println(field);
        try {
            int _return = 0;
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
        //throw new IntegrationFault("IntegrationFault...");
    }

    /* (non-Javadoc)
     * @see com.cnpe.p6.activityservice.ActivityPortType#readActivities(java.util.List<com.cnpe.p6.activityservice.ActivityFieldType>  field ,)java.lang.String  filter ,)java.lang.String  orderBy )*
     */
    public java.util.List<com.cnpe.p6.activityservice.Activity> readActivities(java.util.List<com.cnpe.p6.activityservice.ActivityFieldType> field,java.lang.String filter,java.lang.String orderBy) throws IntegrationFault    { 
        LOG.info("Executing operation readActivities");
        System.out.println(field);
        System.out.println(filter);
        System.out.println(orderBy);
        try {
            java.util.List<com.cnpe.p6.activityservice.Activity> _return = null;
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
        //throw new IntegrationFault("IntegrationFault...");
    }

    /* (non-Javadoc)
     * @see com.cnpe.p6.activityservice.ActivityPortType#deleteActivities(java.util.List<java.lang.Integer>  objectId )*
     */
    public boolean deleteActivities(java.util.List<java.lang.Integer> objectId) throws IntegrationFault    { 
        LOG.info("Executing operation deleteActivities");
        System.out.println(objectId);
        try {
            boolean _return = false;
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
        //throw new IntegrationFault("IntegrationFault...");
    }

    /* (non-Javadoc)
     * @see com.cnpe.p6.activityservice.ActivityPortType#readAllActivitiesByWBS(int  wbsObjectId ,)java.util.List<com.cnpe.p6.activityservice.ActivityFieldType>  field ,)java.lang.String  filter ,)java.lang.String  orderBy )*
     */
    public java.util.List<com.cnpe.p6.activityservice.Activity> readAllActivitiesByWBS(int wbsObjectId,java.util.List<com.cnpe.p6.activityservice.ActivityFieldType> field,java.lang.String filter,java.lang.String orderBy) throws IntegrationFault    { 
        LOG.info("Executing operation readAllActivitiesByWBS");
        System.out.println(wbsObjectId);
        System.out.println(field);
        System.out.println(filter);
        System.out.println(orderBy);
        try {
            java.util.List<com.cnpe.p6.activityservice.Activity> _return = null;
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
        //throw new IntegrationFault("IntegrationFault...");
    }

    /* (non-Javadoc)
     * @see com.cnpe.p6.activityservice.ActivityPortType#dissolveActivity(int  objectId )*
     */
    public boolean dissolveActivity(int objectId) throws IntegrationFault    { 
        LOG.info("Executing operation dissolveActivity");
        System.out.println(objectId);
        try {
            boolean _return = false;
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
        //throw new IntegrationFault("IntegrationFault...");
    }

}
