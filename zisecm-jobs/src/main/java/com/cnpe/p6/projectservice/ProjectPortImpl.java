
/**
 * Please modify this class to meet your needs
 * This class is not complete
 */

package com.cnpe.p6.projectservice;

import java.util.logging.Logger;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;

/**
 * This class was generated by Apache CXF 3.0.3
 * 2020-07-08T18:51:03.417+08:00
 * Generated source version: 3.0.3
 * 
 */

@javax.jws.WebService(
                      serviceName = "ProjectService",
                      portName = "ProjectPort",
                      targetNamespace = "http://xmlns.oracle.com/Primavera/P6/WS/Project/V2",
                      wsdlLocation = "http://10.30.200.163:8206/p6ws/services/ProjectService?wsdl",
                      endpointInterface = "com.cnpe.p6.projectservice.ProjectPortType")
                      
public class ProjectPortImpl implements ProjectPortType {

    private static final Logger LOG = Logger.getLogger(ProjectPortImpl.class.getName());

    /* (non-Javadoc)
     * @see com.cnpe.p6.projectservice.ProjectPortType#loadAllResources(int  objectId ,)java.util.List<java.lang.String>  fields ,)java.lang.String  whereClause ,)java.lang.String  orderBy )*
     */
    public java.util.List<java.lang.String> loadAllResources(int objectId,java.util.List<java.lang.String> fields,java.lang.String whereClause,java.lang.String orderBy) throws IntegrationFault    { 
        LOG.info("Executing operation loadAllResources");
        System.out.println(objectId);
        System.out.println(fields);
        System.out.println(whereClause);
        System.out.println(orderBy);
        try {
            java.util.List<java.lang.String> _return = null;
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
        //throw new IntegrationFault("IntegrationFault...");
    }

    /* (non-Javadoc)
     * @see com.cnpe.p6.projectservice.ProjectPortType#copyWBSFromTemplate(java.lang.Integer  objectId ,)int  templateWbsObjectId )*
     */
    public void copyWBSFromTemplate(javax.xml.ws.Holder<java.lang.Integer> objectId,int templateWbsObjectId) throws IntegrationFault    { 
        LOG.info("Executing operation copyWBSFromTemplate");
        System.out.println(objectId.value);
        System.out.println(templateWbsObjectId);
        try {
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
        //throw new IntegrationFault("IntegrationFault...");
    }

    /* (non-Javadoc)
     * @see com.cnpe.p6.projectservice.ProjectPortType#assignProjectAsBaseline(int  originalProjectObjectId ,)int  targetProjectObjectId )*
     */
    public int assignProjectAsBaseline(int originalProjectObjectId,int targetProjectObjectId) throws IntegrationFault    { 
        LOG.info("Executing operation assignProjectAsBaseline");
        System.out.println(originalProjectObjectId);
        System.out.println(targetProjectObjectId);
        try {
            int _return = 0;
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
        //throw new IntegrationFault("IntegrationFault...");
    }

    /* (non-Javadoc)
     * @see com.cnpe.p6.projectservice.ProjectPortType#createProjects(java.util.List<com.cnpe.p6.projectservice.Project>  project )*
     */
    public java.util.List<java.lang.Integer> createProjects(java.util.List<com.cnpe.p6.projectservice.Project> project) throws IntegrationFault    { 
        LOG.info("Executing operation createProjects");
        System.out.println(project);
        try {
            java.util.List<java.lang.Integer> _return = null;
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
        //throw new IntegrationFault("IntegrationFault...");
    }

    /* (non-Javadoc)
     * @see com.cnpe.p6.projectservice.ProjectPortType#convertProjectToBaseline(int  originalProjectObjectId ,)int  targetProjectObjectId )*
     */
    public int convertProjectToBaseline(int originalProjectObjectId,int targetProjectObjectId) throws IntegrationFault    { 
        LOG.info("Executing operation convertProjectToBaseline");
        System.out.println(originalProjectObjectId);
        System.out.println(targetProjectObjectId);
        try {
            int _return = 0;
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
        //throw new IntegrationFault("IntegrationFault...");
    }

    /* (non-Javadoc)
     * @see com.cnpe.p6.projectservice.ProjectPortType#readProjects(java.util.List<java.lang.String>  field ,)java.lang.String  filter ,)java.lang.String  orderBy )*
     */
    public java.util.List<com.cnpe.p6.projectservice.Project> readProjects(java.util.List<java.lang.String> field,java.lang.String filter,java.lang.String orderBy) throws IntegrationFault    { 
        LOG.info("Executing operation readProjects");
        System.out.println(field);
        System.out.println(filter);
        System.out.println(orderBy);
        try {
            java.util.List<com.cnpe.p6.projectservice.Project> _return = null;
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
        //throw new IntegrationFault("IntegrationFault...");
    }

    /* (non-Javadoc)
     * @see com.cnpe.p6.projectservice.ProjectPortType#loadActivityUDFValuesNewerThanBaseline(int  objectId ,)java.util.List<java.lang.String>  fields ,)java.lang.String  whereClause ,)java.lang.String  orderBy ,)int  baselineObjectId )*
     */
    public java.util.List<java.lang.String> loadActivityUDFValuesNewerThanBaseline(int objectId,java.util.List<java.lang.String> fields,java.lang.String whereClause,java.lang.String orderBy,int baselineObjectId) throws IntegrationFault    { 
        LOG.info("Executing operation loadActivityUDFValuesNewerThanBaseline");
        System.out.println(objectId);
        System.out.println(fields);
        System.out.println(whereClause);
        System.out.println(orderBy);
        System.out.println(baselineObjectId);
        try {
            java.util.List<java.lang.String> _return = null;
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
        //throw new IntegrationFault("IntegrationFault...");
    }

    /* (non-Javadoc)
     * @see com.cnpe.p6.projectservice.ProjectPortType#copyProject(java.lang.Integer  objectId ,)int  epsObjectId ,)java.lang.Boolean  copyRisks ,)java.lang.Boolean  copyIssuesThresholds ,)java.lang.Boolean  copyReports ,)java.lang.Boolean  copyProjectDocuments ,)java.lang.Boolean  copyFundingSources ,)java.lang.Boolean  copySummaryData ,)java.lang.Boolean  copyProjectNotes ,)java.lang.Boolean  copyWBSMilestones ,)java.lang.Boolean  copyActivities ,)java.lang.Boolean  copyHighLevelResourcePlanning ,)java.lang.Boolean  copyResourceAndRoleAssignments ,)java.lang.Boolean  copyRelationships ,)java.lang.Boolean  copyOnlyBetweenCopiedActivities ,)java.lang.Boolean  copyActivityExpenses ,)java.lang.Boolean  copyActivityCodes ,)java.lang.Boolean  copyActivityNotes ,)java.lang.Boolean  copyActivitySteps ,)java.lang.Boolean  copyPastPeriodActuals )*
     */
    public void copyProject(javax.xml.ws.Holder<java.lang.Integer> objectId,int epsObjectId,java.lang.Boolean copyRisks,java.lang.Boolean copyIssuesThresholds,java.lang.Boolean copyReports,java.lang.Boolean copyProjectDocuments,java.lang.Boolean copyFundingSources,java.lang.Boolean copySummaryData,java.lang.Boolean copyProjectNotes,java.lang.Boolean copyWBSMilestones,java.lang.Boolean copyActivities,java.lang.Boolean copyHighLevelResourcePlanning,java.lang.Boolean copyResourceAndRoleAssignments,java.lang.Boolean copyRelationships,java.lang.Boolean copyOnlyBetweenCopiedActivities,java.lang.Boolean copyActivityExpenses,java.lang.Boolean copyActivityCodes,java.lang.Boolean copyActivityNotes,java.lang.Boolean copyActivitySteps,java.lang.Boolean copyPastPeriodActuals) throws IntegrationFault    { 
        LOG.info("Executing operation copyProject");
        System.out.println(objectId.value);
        System.out.println(epsObjectId);
        System.out.println(copyRisks);
        System.out.println(copyIssuesThresholds);
        System.out.println(copyReports);
        System.out.println(copyProjectDocuments);
        System.out.println(copyFundingSources);
        System.out.println(copySummaryData);
        System.out.println(copyProjectNotes);
        System.out.println(copyWBSMilestones);
        System.out.println(copyActivities);
        System.out.println(copyHighLevelResourcePlanning);
        System.out.println(copyResourceAndRoleAssignments);
        System.out.println(copyRelationships);
        System.out.println(copyOnlyBetweenCopiedActivities);
        System.out.println(copyActivityExpenses);
        System.out.println(copyActivityCodes);
        System.out.println(copyActivityNotes);
        System.out.println(copyActivitySteps);
        System.out.println(copyPastPeriodActuals);
        try {
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
        //throw new IntegrationFault("IntegrationFault...");
    }

    /* (non-Javadoc)
     * @see com.cnpe.p6.projectservice.ProjectPortType#getFieldLengthProject(java.lang.String  field )*
     */
    public int getFieldLengthProject(java.lang.String field) throws IntegrationFault    { 
        LOG.info("Executing operation getFieldLengthProject");
        System.out.println(field);
        try {
            int _return = 0;
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
        //throw new IntegrationFault("IntegrationFault...");
    }

    /* (non-Javadoc)
     * @see com.cnpe.p6.projectservice.ProjectPortType#updateProjects(java.util.List<com.cnpe.p6.projectservice.Project>  project )*
     */
    public boolean updateProjects(java.util.List<com.cnpe.p6.projectservice.Project> project) throws IntegrationFault    { 
        LOG.info("Executing operation updateProjects");
        System.out.println(project);
        try {
            boolean _return = false;
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
        //throw new IntegrationFault("IntegrationFault...");
    }

    /* (non-Javadoc)
     * @see com.cnpe.p6.projectservice.ProjectPortType#copyProjectAsReflection(java.lang.Integer  objectId )*
     */
    public void copyProjectAsReflection(javax.xml.ws.Holder<java.lang.Integer> objectId) throws IntegrationFault    { 
        LOG.info("Executing operation copyProjectAsReflection");
        System.out.println(objectId.value);
        try {
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
        //throw new IntegrationFault("IntegrationFault...");
    }

    /* (non-Javadoc)
     * @see com.cnpe.p6.projectservice.ProjectPortType#createCopyAsTemplate(java.lang.Integer  objectId ,)int  epsObjectId ,)java.lang.Boolean  copyRisks ,)java.lang.Boolean  copyIssuesThresholds ,)java.lang.Boolean  copyReports ,)java.lang.Boolean  copyProjectDocuments ,)java.lang.Boolean  copyFundingSources ,)java.lang.Boolean  copySummaryData ,)java.lang.Boolean  copyProjectNotes ,)java.lang.Boolean  copyActualToPlannedValues ,)java.lang.Boolean  copyWBSMilestones ,)java.lang.Boolean  copyActivities ,)java.lang.Boolean  copyHighLevelResourcePlanning ,)java.lang.Boolean  copyResourceAndRoleAssignments ,)java.lang.Boolean  copyRelationships ,)java.lang.Boolean  copyOnlyBetweenCopiedActivities ,)java.lang.Boolean  copyActivityExpenses ,)java.lang.Boolean  copyActivityCodes ,)java.lang.Boolean  copyActivityNotes ,)java.lang.Boolean  copyActivitySteps ,)java.lang.Boolean  copyPastPeriodActuals )*
     */
    public void createCopyAsTemplate(javax.xml.ws.Holder<java.lang.Integer> objectId,int epsObjectId,java.lang.Boolean copyRisks,java.lang.Boolean copyIssuesThresholds,java.lang.Boolean copyReports,java.lang.Boolean copyProjectDocuments,java.lang.Boolean copyFundingSources,java.lang.Boolean copySummaryData,java.lang.Boolean copyProjectNotes,java.lang.Boolean copyActualToPlannedValues,java.lang.Boolean copyWBSMilestones,java.lang.Boolean copyActivities,java.lang.Boolean copyHighLevelResourcePlanning,java.lang.Boolean copyResourceAndRoleAssignments,java.lang.Boolean copyRelationships,java.lang.Boolean copyOnlyBetweenCopiedActivities,java.lang.Boolean copyActivityExpenses,java.lang.Boolean copyActivityCodes,java.lang.Boolean copyActivityNotes,java.lang.Boolean copyActivitySteps,java.lang.Boolean copyPastPeriodActuals) throws IntegrationFault    { 
        LOG.info("Executing operation createCopyAsTemplate");
        System.out.println(objectId.value);
        System.out.println(epsObjectId);
        System.out.println(copyRisks);
        System.out.println(copyIssuesThresholds);
        System.out.println(copyReports);
        System.out.println(copyProjectDocuments);
        System.out.println(copyFundingSources);
        System.out.println(copySummaryData);
        System.out.println(copyProjectNotes);
        System.out.println(copyActualToPlannedValues);
        System.out.println(copyWBSMilestones);
        System.out.println(copyActivities);
        System.out.println(copyHighLevelResourcePlanning);
        System.out.println(copyResourceAndRoleAssignments);
        System.out.println(copyRelationships);
        System.out.println(copyOnlyBetweenCopiedActivities);
        System.out.println(copyActivityExpenses);
        System.out.println(copyActivityCodes);
        System.out.println(copyActivityNotes);
        System.out.println(copyActivitySteps);
        System.out.println(copyPastPeriodActuals);
        try {
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
        //throw new IntegrationFault("IntegrationFault...");
    }

    /* (non-Javadoc)
     * @see com.cnpe.p6.projectservice.ProjectPortType#copyBaseline(java.lang.Integer  objectId ,)int  baselineObjectId )*
     */
    public void copyBaseline(javax.xml.ws.Holder<java.lang.Integer> objectId,int baselineObjectId) throws IntegrationFault    { 
        LOG.info("Executing operation copyBaseline");
        System.out.println(objectId.value);
        System.out.println(baselineObjectId);
        try {
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
        //throw new IntegrationFault("IntegrationFault...");
    }

    /* (non-Javadoc)
     * @see com.cnpe.p6.projectservice.ProjectPortType#loadActivitiesNewerThanBaseline(int  objectId ,)java.util.List<java.lang.String>  fields ,)java.lang.String  whereClause ,)java.lang.String  orderBy ,)int  baselineObjectId )*
     */
    public java.util.List<java.lang.String> loadActivitiesNewerThanBaseline(int objectId,java.util.List<java.lang.String> fields,java.lang.String whereClause,java.lang.String orderBy,int baselineObjectId) throws IntegrationFault    { 
        LOG.info("Executing operation loadActivitiesNewerThanBaseline");
        System.out.println(objectId);
        System.out.println(fields);
        System.out.println(whereClause);
        System.out.println(orderBy);
        System.out.println(baselineObjectId);
        try {
            java.util.List<java.lang.String> _return = null;
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
        //throw new IntegrationFault("IntegrationFault...");
    }

    /* (non-Javadoc)
     * @see com.cnpe.p6.projectservice.ProjectPortType#createProjectFromTemplate(java.lang.Integer  objectId ,)int  epsObjectId ,)java.lang.Boolean  copyRisks ,)java.lang.Boolean  copyIssuesThresholds ,)java.lang.Boolean  copyReports ,)java.lang.Boolean  copyProjectDocuments ,)java.lang.Boolean  copyFundingSources ,)java.lang.Boolean  copySummaryData ,)java.lang.Boolean  copyProjectNotes ,)java.lang.Boolean  copyWBSMilestones ,)java.lang.Boolean  copyActivities ,)java.lang.Boolean  copyHighLevelResourcePlanning ,)java.lang.Boolean  copyResourceAndRoleAssignments ,)java.lang.Boolean  copyRelationships ,)java.lang.Boolean  copyOnlyBetweenCopiedActivities ,)java.lang.Boolean  copyActivityExpenses ,)java.lang.Boolean  copyActivityCodes ,)java.lang.Boolean  copyActivityNotes ,)java.lang.Boolean  copyActivitySteps ,)java.lang.Boolean  copyPastPeriodActuals )*
     */
    public void createProjectFromTemplate(javax.xml.ws.Holder<java.lang.Integer> objectId,int epsObjectId,java.lang.Boolean copyRisks,java.lang.Boolean copyIssuesThresholds,java.lang.Boolean copyReports,java.lang.Boolean copyProjectDocuments,java.lang.Boolean copyFundingSources,java.lang.Boolean copySummaryData,java.lang.Boolean copyProjectNotes,java.lang.Boolean copyWBSMilestones,java.lang.Boolean copyActivities,java.lang.Boolean copyHighLevelResourcePlanning,java.lang.Boolean copyResourceAndRoleAssignments,java.lang.Boolean copyRelationships,java.lang.Boolean copyOnlyBetweenCopiedActivities,java.lang.Boolean copyActivityExpenses,java.lang.Boolean copyActivityCodes,java.lang.Boolean copyActivityNotes,java.lang.Boolean copyActivitySteps,java.lang.Boolean copyPastPeriodActuals) throws IntegrationFault    { 
        LOG.info("Executing operation createProjectFromTemplate");
        System.out.println(objectId.value);
        System.out.println(epsObjectId);
        System.out.println(copyRisks);
        System.out.println(copyIssuesThresholds);
        System.out.println(copyReports);
        System.out.println(copyProjectDocuments);
        System.out.println(copyFundingSources);
        System.out.println(copySummaryData);
        System.out.println(copyProjectNotes);
        System.out.println(copyWBSMilestones);
        System.out.println(copyActivities);
        System.out.println(copyHighLevelResourcePlanning);
        System.out.println(copyResourceAndRoleAssignments);
        System.out.println(copyRelationships);
        System.out.println(copyOnlyBetweenCopiedActivities);
        System.out.println(copyActivityExpenses);
        System.out.println(copyActivityCodes);
        System.out.println(copyActivityNotes);
        System.out.println(copyActivitySteps);
        System.out.println(copyPastPeriodActuals);
        try {
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
        //throw new IntegrationFault("IntegrationFault...");
    }

    /* (non-Javadoc)
     * @see com.cnpe.p6.projectservice.ProjectPortType#updateProjectPreferences(int  objectId ,)java.lang.Boolean  enablePublication ,)java.lang.Integer  publicationPriority ,)java.lang.String  lastPublishedOn ,)java.lang.String  publishLevel ,)java.lang.String  deploymentNames ,)java.lang.String  deleteDeployments ,)java.lang.Boolean  unifierEnabledFlag ,)java.lang.String  unifierProjectNumber ,)java.lang.String  unifierProjectName ,)java.lang.String  unifierScheduleSheetName ,)java.lang.String  unifierDataMappingName ,)java.lang.Boolean  unifierDeleteActivitiesFlag ,)java.lang.Boolean  unifierCBSTasksOnlyFlag ,)java.lang.String  projectScheduleType ,)java.lang.Boolean  syncWbsHierarchyFlag ,)java.lang.String  scheduleWBSHierarchyType ,)java.lang.Integer  wbsHierarchyLevels ,)java.lang.Boolean  enableSummarization ,)java.lang.String  summaryLevel ,)java.lang.Integer  summarizeToWBSLevel ,)java.lang.String  lastSummarizedDate ,)java.lang.String  historyLevel ,)java.lang.String  historyInterval )*
     */
    public boolean updateProjectPreferences(int objectId,java.lang.Boolean enablePublication,java.lang.Integer publicationPriority,java.lang.String lastPublishedOn,java.lang.String publishLevel,java.lang.String deploymentNames,java.lang.String deleteDeployments,java.lang.Boolean unifierEnabledFlag,java.lang.String unifierProjectNumber,java.lang.String unifierProjectName,java.lang.String unifierScheduleSheetName,java.lang.String unifierDataMappingName,java.lang.Boolean unifierDeleteActivitiesFlag,java.lang.Boolean unifierCBSTasksOnlyFlag,java.lang.String projectScheduleType,java.lang.Boolean syncWbsHierarchyFlag,java.lang.String scheduleWBSHierarchyType,java.lang.Integer wbsHierarchyLevels,java.lang.Boolean enableSummarization,java.lang.String summaryLevel,java.lang.Integer summarizeToWBSLevel,java.lang.String lastSummarizedDate,java.lang.String historyLevel,java.lang.String historyInterval) throws IntegrationFault    { 
        LOG.info("Executing operation updateProjectPreferences");
        System.out.println(objectId);
        System.out.println(enablePublication);
        System.out.println(publicationPriority);
        System.out.println(lastPublishedOn);
        System.out.println(publishLevel);
        System.out.println(deploymentNames);
        System.out.println(deleteDeployments);
        System.out.println(unifierEnabledFlag);
        System.out.println(unifierProjectNumber);
        System.out.println(unifierProjectName);
        System.out.println(unifierScheduleSheetName);
        System.out.println(unifierDataMappingName);
        System.out.println(unifierDeleteActivitiesFlag);
        System.out.println(unifierCBSTasksOnlyFlag);
        System.out.println(projectScheduleType);
        System.out.println(syncWbsHierarchyFlag);
        System.out.println(scheduleWBSHierarchyType);
        System.out.println(wbsHierarchyLevels);
        System.out.println(enableSummarization);
        System.out.println(summaryLevel);
        System.out.println(summarizeToWBSLevel);
        System.out.println(lastSummarizedDate);
        System.out.println(historyLevel);
        System.out.println(historyInterval);
        try {
            boolean _return = false;
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
        //throw new IntegrationFault("IntegrationFault...");
    }

    /* (non-Javadoc)
     * @see com.cnpe.p6.projectservice.ProjectPortType#loadActivityCodesNewerThanBaseline(int  objectId ,)java.util.List<java.lang.String>  fields ,)java.lang.String  whereClause ,)java.lang.String  orderBy ,)int  baselineObjectId )*
     */
    public java.util.List<java.lang.String> loadActivityCodesNewerThanBaseline(int objectId,java.util.List<java.lang.String> fields,java.lang.String whereClause,java.lang.String orderBy,int baselineObjectId) throws IntegrationFault    { 
        LOG.info("Executing operation loadActivityCodesNewerThanBaseline");
        System.out.println(objectId);
        System.out.println(fields);
        System.out.println(whereClause);
        System.out.println(orderBy);
        System.out.println(baselineObjectId);
        try {
            java.util.List<java.lang.String> _return = null;
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
        //throw new IntegrationFault("IntegrationFault...");
    }

    /* (non-Javadoc)
     * @see com.cnpe.p6.projectservice.ProjectPortType#isProjectLocked(int  objectId ,)boolean  includeCurrentSession )*
     */
    public boolean isProjectLocked(int objectId,boolean includeCurrentSession) throws IntegrationFault    { 
        LOG.info("Executing operation isProjectLocked");
        System.out.println(objectId);
        System.out.println(includeCurrentSession);
        try {
            boolean _return = false;
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
        //throw new IntegrationFault("IntegrationFault...");
    }

    /* (non-Javadoc)
     * @see com.cnpe.p6.projectservice.ProjectPortType#calculateProjectScore(int  projectObjectId ,)java.util.List<java.lang.Integer>  projectCodeTypeObjectId )*
     */
    public int calculateProjectScore(int projectObjectId,java.util.List<java.lang.Integer> projectCodeTypeObjectId) throws IntegrationFault    { 
        LOG.info("Executing operation calculateProjectScore");
        System.out.println(projectObjectId);
        System.out.println(projectCodeTypeObjectId);
        try {
            int _return = 0;
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
        //throw new IntegrationFault("IntegrationFault...");
    }

    /* (non-Javadoc)
     * @see com.cnpe.p6.projectservice.ProjectPortType#publishProject(int  objectId )*
     */
    public boolean publishProject(int objectId) throws IntegrationFault    { 
        LOG.info("Executing operation publishProject");
        System.out.println(objectId);
        try {
            boolean _return = false;
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
        //throw new IntegrationFault("IntegrationFault...");
    }

    /* (non-Javadoc)
     * @see com.cnpe.p6.projectservice.ProjectPortType#copyProjectAsBaseline(java.lang.Integer  objectId )*
     */
    public void copyProjectAsBaseline(javax.xml.ws.Holder<java.lang.Integer> objectId) throws IntegrationFault    { 
        LOG.info("Executing operation copyProjectAsBaseline");
        System.out.println(objectId.value);
        try {
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
        //throw new IntegrationFault("IntegrationFault...");
    }

    /* (non-Javadoc)
     * @see com.cnpe.p6.projectservice.ProjectPortType#deleteProjects(java.util.List<java.lang.Integer>  objectId )*
     */
    public boolean deleteProjects(java.util.List<java.lang.Integer> objectId) throws IntegrationFault    { 
        LOG.info("Executing operation deleteProjects");
        System.out.println(objectId);
        try {
            boolean _return = false;
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
        //throw new IntegrationFault("IntegrationFault...");
    }

}
