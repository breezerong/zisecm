<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ecm.core.dao.ExcSynBatchMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.ecm.core.entity.ExcSynBatch">
        <id column="ID" property="id" jdbcType="NVARCHAR" />
        <result column="APP_NAME" property="appName" jdbcType="NVARCHAR" />
        <result column="ACTION_NAME" property="actionName" jdbcType="NVARCHAR" />
        <result column="BATCH_NUM" property="batchNum" jdbcType="NVARCHAR" />
        <result column="CREATION_DATE" property="creationDate" jdbcType="TIMESTAMP" />
        <result column="STAUTS" property="stauts" jdbcType="NVARCHAR" />
        <result column="EXECUTE_DATE" property="executeDate" jdbcType="TIMESTAMP" />
        <result column="NEW_COUNT" property="newCount" jdbcType="INTEGER" />
        <result column="UPDATE_COUNT" property="updateCount" jdbcType="INTEGER" />
        <result column="FAIL_COUNT" property="failCount" jdbcType="INTEGER" />
    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        ID, APP_NAME, ACTION_NAME, BATCH_NUM, CREATION_DATE, STAUTS, EXECUTE_DATE, NEW_COUNT, UPDATE_COUNT, FAIL_COUNT
    </sql>


  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from exc_syn_batch
    where ID = #{id,jdbcType=VARCHAR}
  </select>
  
  <select id="selectAll" parameterType="java.lang.String" resultMap="BaseResultMap">
  	select
    <include refid="Base_Column_List" />
    from exc_syn_batch order by ID
  </select>
  
  
  <select id="getByCondition" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from exc_syn_batch
    where ${condition}
  </select>
  
  
  
  <select id="selectByCondition" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from exc_syn_batch
    where ${condition}
  </select>
  
  
  <select id="executeSQL" parameterType="java.lang.String" resultType="java.util.Map"> 
	${sqlStr}
  </select>
  
   <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from exc_syn_batch
    where ID = #{id,jdbcType=VARCHAR}
  </delete>
  
  <insert id="insert" parameterType="com.ecm.core.entity.ExcSynBatch">
    insert into exc_syn_batch (
		    ID,
		    APP_NAME,
		    ACTION_NAME,
		    BATCH_NUM,
		    CREATION_DATE,
		    STAUTS,
		    EXECUTE_DATE,
		    NEW_COUNT,
		    UPDATE_COUNT,
		    FAIL_COUNT
      )
    values (
    		 #{id},
    		 #{appName},
    		 #{actionName},
    		 #{batchNum},
    		 #{creationDate},
    		 #{stauts},
    		 #{executeDate},
    		 #{newCount},
    		 #{updateCount},
    		 #{failCount}
    	)
  </insert>
  
  
  <insert id="insertSelective" parameterType="com.ecm.core.entity.ExcSynBatch">
    insert into exc_syn_batch
    <trim prefix="(" suffix=")" suffixOverrides=",">
    	<if test="id != null">
    		 ID,
    	</if>
    	<if test="appName != null">
    		 APP_NAME,
    	</if>
    	<if test="actionName != null">
    		 ACTION_NAME,
    	</if>
    	<if test="batchNum != null">
    		 BATCH_NUM,
    	</if>
    	<if test="creationDate != null">
    		 CREATION_DATE,
    	</if>
    	<if test="stauts != null">
    		 STAUTS,
    	</if>
    	<if test="executeDate != null">
    		 EXECUTE_DATE,
    	</if>
    	<if test="newCount != null">
    		 NEW_COUNT,
    	</if>
    	<if test="updateCount != null">
    		 UPDATE_COUNT,
    	</if>
    	<if test="failCount != null">
    		 FAIL_COUNT,
    	</if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
    	<if test="id != null">
    		#{id,jdbcType=NVARCHAR}, 		 
    	</if>
    	<if test="appName != null">
    		#{appName,jdbcType=NVARCHAR}, 		 
    	</if>
    	<if test="actionName != null">
    		#{actionName,jdbcType=NVARCHAR}, 		 
    	</if>
    	<if test="batchNum != null">
    		#{batchNum,jdbcType=NVARCHAR}, 		 
    	</if>
    	<if test="creationDate != null">
    		#{creationDate,jdbcType=TIMESTAMP}, 		 
    	</if>
    	<if test="stauts != null">
    		#{stauts,jdbcType=NVARCHAR}, 		 
    	</if>
    	<if test="executeDate != null">
    		#{executeDate,jdbcType=TIMESTAMP}, 		 
    	</if>
    	<if test="newCount != null">
    		#{newCount,jdbcType=INTEGER}, 		 
    	</if>
    	<if test="updateCount != null">
    		#{updateCount,jdbcType=INTEGER}, 		 
    	</if>
    	<if test="failCount != null">
    		#{failCount,jdbcType=INTEGER}, 		 
    	</if>
    </trim>
  </insert>
  
  
  <update id="updateByPrimaryKeySelective" parameterType="com.ecm.core.entity.ExcSynBatch">
    update exc_syn_batch
    <set>
    	<if test="id != null">
    		ID=#{id,jdbcType=NVARCHAR}, 		 
    	</if>
    	<if test="appName != null">
    		APP_NAME=#{appName,jdbcType=NVARCHAR}, 		 
    	</if>
    	<if test="actionName != null">
    		ACTION_NAME=#{actionName,jdbcType=NVARCHAR}, 		 
    	</if>
    	<if test="batchNum != null">
    		BATCH_NUM=#{batchNum,jdbcType=NVARCHAR}, 		 
    	</if>
    	<if test="creationDate != null">
    		CREATION_DATE=#{creationDate,jdbcType=TIMESTAMP}, 		 
    	</if>
    	<if test="stauts != null">
    		STAUTS=#{stauts,jdbcType=NVARCHAR}, 		 
    	</if>
    	<if test="executeDate != null">
    		EXECUTE_DATE=#{executeDate,jdbcType=TIMESTAMP}, 		 
    	</if>
    	<if test="newCount != null">
    		NEW_COUNT=#{newCount,jdbcType=INTEGER}, 		 
    	</if>
    	<if test="updateCount != null">
    		UPDATE_COUNT=#{updateCount,jdbcType=INTEGER}, 		 
    	</if>
    	<if test="failCount != null">
    		FAIL_COUNT=#{failCount,jdbcType=INTEGER}, 		 
    	</if>
    </set>
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ecm.core.entity.ExcSynBatch">
    update ecm_component
    set     
   		ID=#{id},
   		APP_NAME=#{appName},
   		ACTION_NAME=#{actionName},
   		BATCH_NUM=#{batchNum},
   		CREATION_DATE=#{creationDate},
   		STAUTS=#{stauts},
   		EXECUTE_DATE=#{executeDate},
   		NEW_COUNT=#{newCount},
   		UPDATE_COUNT=#{updateCount},
   		FAIL_COUNT=#{failCount}
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  
</mapper>

